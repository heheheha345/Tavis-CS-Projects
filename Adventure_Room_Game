# Player class and actions avalable

import random

class Player:
    self.spaces_moved = 0
    self.name = ""
    self.health = 4
    self.inventory = []
    self.movement_speed = 5

    def __init__(self, name):
        self.name = name

    def get_item(self, pick_up):
        if len(self.inventory) < 5:
            if pick_up == "A":
                pick_up = "apple"
                self.inventory.append(pick_up)
            elif pick_up == "S":
                pick_up = "steak"
                self.inventory.append(pick_up)
            elif pick_up == "K":
                pick_up = "Key"
                self.inventory.append(pick_up)

            print(f"You have picked up an {pick_up}")
        else:
            print("You have too manny items")

    def move(self):
        self.spaces_moved += 1
        if self.spaces_moved == 4:
            print("You are tired. You lost HP")
            self.health -= 1
            print(f"You have {str(self.health)} HP")
            self.spaces_moved = 0

    def use_item(self, item):
        if item in self.inventory:
            self.inventory.remove(item)
            if item == "apple":
                self.health += 1
                print(f"You have eaten an apple, your health is now {self.health}")
            elif item == "steak":
                self.health += 2
                print(f"You have eaten a steak, your health is now {self.health}")
        else:
            print("You don't have this item ")
            return

        print(f"You have eaten a {item}")

    def has_key(self):
        print(self.inventory)
        if 'Key' in self.inventory:
            return True
        else:
            return False
            
# Room Class
import random
class Room:
    def __init__(self, player):
        self.generate_room()
        self.player = player
    room1 = [["0","0","0","D"],["A","0","0","0"],["0","0","0","0"],["K","0","0","0"]]
    """
    0 0 0 0
    0 0 0 0
    0 0 0 0
    0 0 0 0
    """
    room2 = [["0","0","0","0"],["0","0","0","0"],["0","0","0","0"],["0","0","0","0"]]
    places = [(0,0), (0,1), (0,2), (0,3), (1,0), (1,1), (1,2), (1,3), (2,2), (2,3), (3,2), (3,3)]
    objects = ["D", "K", "A", "S"]
    player_row = 3
    player_column = 0
    player_room = room1
    def generate_room(self):
        while len(self.objects) > 0:
            obj = random.choice(self.objects)
            place = random.choice(self.places)
            self.room2[place[0]][place[1]] = obj
            self.objects.remove(obj)
            self.places.remove(place)
    def move_left(self):
        self.player_column -= 1
        if self.player_column == -1:
            self.player_column = 3
        self.player.move()
    def move_right(self):
        self.player_column += 1
        if self.player_column == 4:
            self.player_column = 0
        self.player.move()
    def move_up(self):
        self.player_row -= 1
        if self.player_row == -1:
            self.player_row = 3
        self.player.move()
    def move_down(self):
        self.player_row += 1
        if self.player_row == 4:
            self.player_row = 0
        self.player.move()
    def use_item(self):
        item = self.player_room[self.player_row][self.player_column]
        if item == "A" or item == "K" or item == "S":
            return item
        else:
            return ""
    def open_door(self, has_key):
        item = self.player_room[self.player_row][self.player_column]
        if item == "D" and has_key == True:
            self.player_room = self.room2
            print("On to the next room traveler! ")
        else:
            print("You are either not at the door, or don't have the key")
    def pickup_item(self):
        self.player_room[self.player_row][self.player_column] = "0"

    """
      0 0 0 0
      0 0 0 0
      0 0 0 0
      1 0 0 0
    """
    def print_room(self):
        if self.player_column != 0 and self.player_row !=0:
            print(self.player_room[self.player_row - 1][self.player_column -1], end="\t")
        else:
            print("V", end="\t")
        if self.player_row != 0:
            print(self.player_room[self.player_row - 1][self.player_column], end="\t")
        else:
            print("V", end="\t")
        if self.player_row != 0 and self.player_column !=3:
            print(self.player_room[self.player_row - 1][self.player_column + 1], end="\t")
        else:
            print("V", end="\t")
        print()
        if self.player_column != 0:
            print(self.player_room[self.player_row ][self.player_column -1], end="\t")
        else:
            print("V", end="\t")
        print(self.player_room[self.player_row][self.player_column], end="\t")
        if self.player_column != 3:
            print(self.player_room[self.player_row][self.player_column + 1], end="\t")
        else:
            print("V", end="\t")
        print()
        if self.player_row != 3 and self.player_column != 0:
            print(self.player_room[self.player_row + 1][self.player_column - 1], end="\t")
        else:
            print("V", end="\t")
        if self.player_row != 3:
            print(self.player_room[self.player_row + 1][self.player_column], end="\t")
        else:
            print("V", end="\t")
        if self.player_column != 3 and self.player_row != 3:
            print(self.player_room[self.player_row ][self.player_column + 1])
        else:
            print("V")
        print()
        
# Code to run game

import Player
import Room
player = Player.Player(input("What's your name? "))
print(f"Welcome to this adventure game {player.name.title()}. In this game you have to find the key located in the room then \n"
"exit the room by opening the door with the key. You will also have some commands available to you. You can move in 4 \n"
"directions; up, down, left, right, pickup items you are on, and use items. To move just type the direction you would \n"
"like to go and to pick up and use an item you type get item or use item. Bellow \n"
"is a 3*3 grid that shouws you what the player can see. You are in the middle of that grid and when you move the grid \n"
"will move with you. Once you reach the door type open door and this will bring you to the next room.")



cave = Room.Room(player)
while True:
    cave.print_room()
    print("Right for Right, Left for Left, Up for Up, Down for Down, get item to pickup")
    print('\n')
    print("Type Inventory to Show Inventory")
    move = input("What action do you want to take ").lower()
    if move == "right":
        cave.move_right()
    elif move == "down":
        cave.move_down()
    elif move == "up":
        cave.move_up()
    elif move == "left":
        cave.move_left()
    elif move == "get item":
        item = cave.use_item()
        if item == "":
            print("You cannot pick this up")
        else:
            player.get_item(item)
            cave.pickup_item()
            print(f"You have picked up {item}")
    elif move == "open door":
        has_key = player.has_key()
        cave.open_door(has_key)
    elif move == "inventory":
        print(player.inventory)
    elif move.startswith("use"):
        words = move.split()
        player.use_item(words[1])
    else:
        print("Invalid move")
    if player.health == 0:
        print("You have lost all your HP. Game over")
        quit()
